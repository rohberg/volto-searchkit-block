services:
  addon-acceptance:
    build:
      context: ../
      dockerfile: ./dockerfiles/frontend/Dockerfile.acceptance
      args:
        ADDON_NAME: '${ADDON_NAME}'
        ADDON_PATH: '${ADDON_PATH}'
        VOLTO_VERSION: ${VOLTO_VERSION:-17}
    volumes:
      - ${CURRENT_DIR}:/app/src/addons/${ADDON_PATH}/
    environment:
      RAZZLE_INTERNAL_API_PATH: http://backend-acceptance:55001/plone
      RAZZLE_API_PATH: http://localhost:55001/plone
      HOST: 0.0.0.0
    ports:
      - 3000:3000
      - 3001:3001
    tty: true
    # depends_on:
    #   - backend-acceptance
    profiles:
      - dev

  addon-acceptance-multilingual:
    build:
      context: ../
      dockerfile: ./dockerfiles/frontend/Dockerfile.acceptance.multilingual
      args:
        ADDON_NAME: '${ADDON_NAME}'
        ADDON_PATH: '${ADDON_PATH}'
        VOLTO_VERSION: ${VOLTO_VERSION:-17}
    volumes:
      - ${CURRENT_DIR}:/app/src/addons/${ADDON_PATH}/
    environment:
      RAZZLE_INTERNAL_API_PATH: http://backend-acceptance-multilingual:55001/plone
      RAZZLE_API_PATH: http://localhost:55001/plone
      HOST: 0.0.0.0
    ports:
      - 3000:3000
      - 3001:3001
    tty: true
    # depends_on:
    #   - backend-acceptance-multilingual
    profiles:
      - multilingual

  backend-acceptance:
    build:
      context: ../
      dockerfile: ./dockerfiles/backend/Dockerfile.acceptance
      args:
        PLONE_VERSION: ${PLONE_VERSION:-6.0}
    environment:
      ZSERVER_HOST: '0.0.0.0'
      ZSERVER_PORT: '55001'
      INDEX_SERVER: ${INDEX_SERVER?unset}
      INDEX_NAME: ${INDEX_NAME?unset}
      INDEX_OPENSEARCH: ${INDEX_OPENSEARCH?unset}
      INDEX_USE_SSL: ${INDEX_USE_SSL?unset}
      INDEX_LOGIN: ${INDEX_LOGIN?unset}
      INDEX_PASSWORD: ${INDEX_PASSWORD?unset}
      CELERY_BROKER: ${CELERY_BROKER?unset}
      CONFIGURE_PACKAGES: 'plone.restapi,plone.volto,plone.volto.cors,collective.elastic.plone,rohberg.volto'
      # Run initialize of collective.elastic.plone to register ElasticSearchProxyIndex
      INSTALL_PRODUCTS: 'collective.elastic.plone'
    volumes:
      - backend-data:/data
    ports:
      - 55001:55001
    profiles:
      - dev
      - prod

  backend-acceptance-multilingual:
    build:
      context: ../
      dockerfile: ./dockerfiles/backend/Dockerfile.acceptance.multilingual
      args:
        PLONE_VERSION: ${PLONE_VERSION:-6.0}
    environment:
      ZSERVER_HOST: '0.0.0.0'
      ZSERVER_PORT: '55001'
      INDEX_SERVER: ${INDEX_SERVER?unset}
      INDEX_NAME: multilingual
      INDEX_OPENSEARCH: ${INDEX_OPENSEARCH?unset}
      INDEX_USE_SSL: ${INDEX_USE_SSL?unset}
      INDEX_LOGIN: ${INDEX_LOGIN?unset}
      INDEX_PASSWORD: ${INDEX_PASSWORD?unset}
      CELERY_BROKER: ${CELERY_BROKER?unset}
      CONFIGURE_PACKAGES: 'plone.restapi,plone.volto,plone.volto.cors,collective.elastic.plone,rohberg.volto'
      # Run initialize of collective.elastic.plone to register ElasticSearchProxyIndex
      INSTALL_PRODUCTS: 'collective.elastic.plone'
    volumes:
      - backend-data:/data
    ports:
      - 55001:55001
    profiles:
      - multilingual

  ingest:
    image: ghcr.io/collective/collective.elastic.ingest:latest
    environment:
      MAPPINGS_FILE: ${MAPPINGS_FILE}
      ANALYSIS_FILE: ${ANALYSIS_FILE}
      PREPROCESSINGS_FILE: ${PREPROCESSINGS_FILE}
      INDEX_SERVER: ${INDEX_SERVER?unset}
      INDEX_NAME: ${INDEX_NAME?unset}
      INDEX_OPENSEARCH: ${INDEX_OPENSEARCH?unset}
      INDEX_USE_SSL: ${INDEX_USE_SSL?unset}
      INDEX_LOGIN: ${INDEX_LOGIN?unset}
      INDEX_PASSWORD: ${INDEX_PASSWORD?unset}
      CELERY_BROKER: ${CELERY_BROKER?unset}
      CELERY_CONCURRENCY: ${CELERY_CONCURRENCY:-1}
      CELEREY_LOG_LEVEL: ${CELERY_LOG_LEVEL:-info}
      PLONE_SERVICE: ${PLONE_SERVICE?unset}
      PLONE_SITE_PREFIX_PATH: ${PLONE_SITE_PREFIX_PATH?unset}
      PLONE_USER: ${PLONE_USER?unset}
      PLONE_PASSWORD: ${PLONE_PASSWORD?unset}
      SENTRY_DSN: ${SENTRY_DSN}
    volumes:
      - ingest-configuration:/configuration
    profiles:
      - dev
      - prod

  ingest-multilingual:
    image: ghcr.io/collective/collective.elastic.ingest:latest
    environment:
      # Different INDEX_NAME
      MAPPINGS_FILE: ${MAPPINGS_FILE}
      ANALYSIS_FILE: ${ANALYSIS_FILE}
      PREPROCESSINGS_FILE: ${PREPROCESSINGS_FILE}
      INDEX_SERVER: ${INDEX_SERVER?unset}
      INDEX_NAME: multilingual
      INDEX_OPENSEARCH: ${INDEX_OPENSEARCH?unset}
      INDEX_USE_SSL: ${INDEX_USE_SSL?unset}
      INDEX_LOGIN: ${INDEX_LOGIN?unset}
      INDEX_PASSWORD: ${INDEX_PASSWORD?unset}
      CELERY_BROKER: ${CELERY_BROKER?unset}
      CELERY_CONCURRENCY: ${CELERY_CONCURRENCY:-1}
      CELEREY_LOG_LEVEL: ${CELERY_LOG_LEVEL:-info}
      PLONE_SERVICE: http://backend-acceptance-multilingual:55001
      PLONE_SITE_PREFIX_PATH: ${PLONE_SITE_PREFIX_PATH?unset}
      PLONE_USER: ${PLONE_USER?unset}
      PLONE_PASSWORD: ${PLONE_PASSWORD?unset}
      SENTRY_DSN: ${SENTRY_DSN}
    volumes:
      - ingest-configuration:/configuration
    profiles:
      - multilingual

  redis:
    image: 'redis:latest'
    ports:
      - 6379:6379

  opensearch:
    build:
      context: ../
      dockerfile: ./dockerfiles/opensearch/Dockerfile.opensearch
    environment:
      - cluster.name=opensearch-cluster
      - node.name=opensearch
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - 'OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx2g'
      # - plugins.security.disabled=true
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=${INDEX_PASSWORD?unset}
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - opensearch-data:/usr/share/opensearch/data
    ports:
      - 9200:9200 # REST API
      - 9600:9600 # Performance Analyzer
    tty: true
    profiles:
      - dev
      - multilingual
      - prod

  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:latest
    ports:
      - 5601:5601
    expose:
      - '5601'
    environment:
      OPENSEARCH_HOSTS: "['https://opensearch:9200']"
    profiles:
      - dev
      - multilingual

  # dejavu:
  #   image: appbaseio/dejavu:latest
  #   container_name: dejavu
  #   ports:
  #     - "1358:1358"
  #   expose:
  #     - "1358"
  #   links:
  #     - opensearch

volumes:
  backend-data:
  opensearch-data:
  ingest-configuration:
    driver: local
    driver_opts:
      type: none
      device: ../dockerfiles/opensearch/ingest-configuration
      o: bind
