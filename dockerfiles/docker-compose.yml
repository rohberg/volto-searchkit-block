version: '3'

services:
  addon-dev:
    build:
      context: ../
      dockerfile: ./dockerfiles/frontend/Dockerfile.dev
      args:
        ADDON_NAME: '${ADDON_NAME}'
        ADDON_PATH: '${ADDON_PATH}'
        VOLTO_VERSION: '${VOLTO_VERSION:-17}'
    volumes:
      - ${CURRENT_DIR}:/app/src/addons/${ADDON_PATH}/
    environment:
      RAZZLE_INTERNAL_API_PATH: http://backend:8080/Plone
      # In case that you want to connect to and outside (non-docker) local instance
      # coment the above, use the next line
      # RAZZLE_INTERNAL_API_PATH: http://host.docker.internal:8080/Plone
      RAZZLE_API_PATH: http://127.0.0.1:8080/Plone
      HOST: 0.0.0.0
    ports:
      - 3000:3000
      - 3001:3001
    networks:
      - opensearch-net
    tty: true
    depends_on:
      - backend
    profiles:
      - dev

  addon-live:
    build:
      context: ../
      dockerfile: ./dockerfiles/frontend/Dockerfile.ci
      args:
        ADDON_NAME: '${ADDON_NAME}'
        ADDON_PATH: '${ADDON_PATH}'
        VOLTO_VERSION: '${VOLTO_VERSION:-17}'
    environment:
      RAZZLE_INTERNAL_API_PATH: http://backend:8080/Plone
      RAZZLE_API_PATH: http://localhost:8080/Plone
    ports:
      - 3000:3000
    networks:
      - opensearch-net
    tty: true
    profiles:
      - live

  backend:
    # image: plone/plone-backend:6.0.10.1
    build:
      context: ./backend
      dockerfile: ./Dockerfile.dev
      args:
        PLONE_VERSION: 6.0.11.1
    environment:
      ZSERVER_HOST: '0.0.0.0'
      ZSERVER_PORT: '8080'
      LANGUAGE: 'de'
      CELERY_BROKER: ${CELERY_BROKER?unset}
      INDEX_SERVER: ${INDEX_SERVER?unset}
      INDEX_OPENSEARCH: ${INDEX_OPENSEARCH?unset}
      INDEX_USE_SSL: ${INDEX_USE_SSL?unset}
      INDEX_LOGIN: ${INDEX_LOGIN?unset}
      INDEX_PASSWORD: ${INDEX_PASSWORD?unset}
      SITE: Plone
      CORS_: true
      ADDONS: 'collective.elastic.plone[redis,opensearch]==2.1.0'
      PROFILES: 'collective.elastic.plone:default'
      DELETE_EXISTING: False
    ports:
      - 8080:8080
    networks:
      - opensearch-net
    profiles:
      - dev
      - prod

  ingest:
    image: ghcr.io/collective/collective.elastic.ingest:latest
    environment:
      MAPPINGS_FILE: ${MAPPINGS_FILE}
      ANALYSIS_FILE: ${ANALYSIS_FILE}
      PREPROCESSINGS_FILE: ${PREPROCESSINGS_FILE}
      INDEX_SERVER: ${INDEX_SERVER?unset}
      INDEX_OPENSEARCH: ${INDEX_OPENSEARCH?unset}
      INDEX_USE_SSL: ${INDEX_USE_SSL?unset}
      INDEX_LOGIN: ${INDEX_LOGIN?unset}
      INDEX_PASSWORD: ${INDEX_PASSWORD?unset}
      CELERY_BROKER: ${CELERY_BROKER?unset}
      CELERY_CONCURRENCY: ${CELERY_CONCURRENCY:-1}
      CELERY_LOGLEVEL: ${CELERY_LOGLEVEL:-info}
      PLONE_SERVICE: ${PLONE_SERVICE?unset}
      PLONE_SITE_PREFIX_PATH: ${PLONE_SITE_PREFIX_PATH?unset}
      PLONE_USER: ${PLONE_USER?unset}
      PLONE_PASSWORD: ${PLONE_PASSWORD?unset}
      SENTRY_DSN: ${SENTRY_DSN}
    volumes:
      - ingest-configuration:/configuration
    networks:
      - opensearch-net
    profiles:
      - dev
      - prod
      - opensearchandingest

  redis:
    image: 'redis:latest'
    ports:
      - 6379:6379
    networks:
      - opensearch-net
    profiles:
      - dev
      - prod
      - opensearchandingest

  opensearch:
    build:
      context: ../
      dockerfile: ./dockerfiles/opensearch/Dockerfile.opensearch
    environment:
      - cluster.name=opensearch-cluster
      - node.name=opensearch
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - 'OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx2g'
      # - plugins.security.disabled=true
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=${INDEX_PASSWORD?unset}
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - opensearch-data:/usr/share/opensearch/data
    networks:
      - opensearch-net
    ports:
      - 9200:9200 # REST API
      - 9600:9600 # Performance Analyzer
    tty: true
    profiles:
      - dev
      - prod
      - opensearchandingest

  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:latest
    ports:
      - 5601:5601
    expose:
      - '5601'
    environment:
      OPENSEARCH_HOSTS: '["https://opensearch:9200"]'
    profiles:
      - dev
      - opensearchandingest
    networks:
      - opensearch-net

  # dejavu:
  #   image: appbaseio/dejavu:latest
  #   container_name: dejavu
  #   ports:
  #     - "1358:1358"
  #   expose:
  #     - "1358"
  #   links:
  #     - opensearch

volumes:
  opensearch-data:
  ingest-configuration:
    driver: local
    driver_opts:
      type: none
      device: ../dockerfiles/opensearch/ingest-configuration
      o: bind

networks:
  opensearch-net:
